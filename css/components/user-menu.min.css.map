{"version":3,"sources":["components/components/user-menu.scss","components/base/_variables.scss","components/base/_mixins.scss"],"names":[],"mappings":"AAGA,WACE,gBAAiB,CAGnB,mBACE,iBAAkB,CAClB,WAAY,CACZ,qBCJa,CDKb,aCVY,CDMd,kDAQI,QAAS,CARb,yBAYI,qBCbW,CDCf,yBAgBI,oCCtBU,CDuBV,qBAAsB,CAjB1B,0BE6BE,eDiBU,CDxBR,iBCIgB,CDFhB,eAAgB,CAxBpB,mDE4BE,gCDS+B,CCP/B,iBAHqE,CFJnE,aAQgB,CA/BpB,yBE6BE,eDkBY,CDlBV,gBCHgB,CDKhB,eAAgB,CAKpB,2BACE,kEAAmE,CAAnE,0DAAmE,CACnE,qBCvCa,CD0Cf,kBACE,YAAa,CAGf,uBACE,iBAAkB,CAClB,OAAQ,CACR,WAAY,CACZ,QAAS,CACT,6BAA8B,CAC9B,8BAA+B,CAC/B,mDAAgD,CAAhD,2CAAgD,CAChD,qBCtDa,CDuDb,SAAU,CACV,eAAgB,CAChB,eAAgB,CAChB,eAAgB,CAGlB,sBACE,aAAc,CACd,YCpCkB,CDqClB,aCjEmB,CD8DrB,wDAOI,sCCtEgB,CD4EpB,uBACE,aAAc,CACd,iBAAkB","file":"user-menu.min.css","sourcesContent":["@import '../base/variables';\n@import '../base/mixins';\n\n.user-menu {\n  text-align: right;\n}\n\n.user-menu__toggle {\n  position: relative;\n  z-index: 901;\n  background-color: $white;\n  color: $primary;\n\n  &:hover,\n  &:focus {\n    border: 0;\n  }\n\n  &:focus {\n    background-color: $white;\n  }\n\n  &:hover {\n    background-color: rgba($primary, 0.15);\n    background-image: none;\n  }\n\n  &:before {\n    @include font(icon);\n    margin-right: $spacing-large;\n    color: $primary;\n    content: '\\f007';\n  }\n\n  &:after {\n    @include font(icon, solid);\n    margin-left: $spacing-large;\n    color: $primary;\n    content: '\\f107';\n  }\n\n}\n\n.user-menu__toggle--active {\n  box-shadow: 0 4px 0 0 #ffffff, 0 1px 3px 0 rgba(114, 119, 128, 0.5);\n  background-color: $white;\n}\n\n.user-menu__links {\n  display: none;\n}\n\n.user-menu__links-list {\n  position: absolute;\n  right: 0;\n  z-index: 900;\n  margin: 0;\n  border-bottom-left-radius: 2px;\n  border-bottom-right-radius: 2px;\n  box-shadow: 0 1px 4px 0 rgba(114, 119, 128, 0.5);\n  background-color: $white;\n  padding: 0;\n  min-width: 200px;\n  list-style: none;\n  text-align: left;\n}\n\n.user-menu__item-link {\n  display: block;\n  padding: $spacing-large;\n  color: $medium-gray;\n\n  &:hover,\n  &:focus {\n    background-color: rgba($light-gray, 0.15);\n  }\n\n}\n\n// JavaScript only. No styling.\n.js-user-menu__visible {\n  display: block;\n  position: relative;\n}\n\n","// colors\n$blue: #0072c5;\n$dark-gray: #222330;\n$gray: #545560;\n$light-gray: #d7d7df;\n$medium-gray: #8e929c;\n$white: #ffffff;\n$red: #cf3a31;\n\n\n$primary: $blue; // Designers envision this being configurable.\n\n$key-actions: $primary;\n$headers: $dark-gray;\n$text: $gray;\n$background: $white;\n$background-secondary: $light-gray;\n$borders: $medium-gray;\n$error: $red;\n\n// status messages\n$message-error-border: $red;\n$message-error-bg: $red;\n$message-error-color: $white;\n$message-status-border: #28a745;\n$message-status-bg: #b7f0d4;\n$message-status-color: #004627;\n$message-warning-border: #ffc107;\n$message-warning-bg: #fff3cd;\n$message-warning-color: #674e03;\n\n\n// margins\n$spacing-large: 16px;\n$spacing-medium: 12px;\n$spacing-small: 6px;\n\n// fonts\n$base-include-path: '..' !default;\n$include-base-fonts: true !default;\n$base-sans-serif: Arial, Verdana, sans-serif !default;\n\n$fonts: (\n  'sans': ('Oxygen', #{$base-sans-serif}),\n  'icon': ('Font Awesome 5 Free'),\n) !default;\n\n$font-weights: (\n  'sans': (\n    reg: 400,\n    bold: 700,\n  ),\n  'icon': (\n    reg: 300,\n    solid: 600,\n  )\n) !default;\n\n","@import './functions';\n@import './variables';\n\n// respond-to()\n//\n// Wrapper for easier media queries\n//\n// @requires {variable} name\n// @param {String} $name              - Value of $breakpoints map.\n// @throws Nov value found for `$breakpoint`. Please make sure it is defined in `$breakpoints` map.\n// @return {String} - A media query for wrapping the content added.\n@mixin respond-to($name) {\n  // If the key exists in the map\n  @if map-has-key($breakpoints, $name) {\n    // Prints a media query based on the value\n    @media screen and (min-width: map-get($breakpoints, $name)) {\n      @content;\n    }\n  } @else {\n    // If the key doesn't exist in the map\n    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoints}`. ' + 'Please make sure it is defined in `$breakpoints` map.';\n  }\n}\n\n// Typography Mixins\n// -----------------------------------------------------------------------------\n\n// font()\n//\n// Set the font-family, weight and style\n//\n// @param {String} $group             - @see $fonts and $fallback-fonts in _variables.scss\n// @param {String} $weight-variant    - Keyword for the font weight. @see font-weights in _variables.scss\n// @param {String} $style-variant     - Whether to use normal or italic font variant\n@mixin font($group: serif, $weight-variant: reg, $style-variant: normal) {\n  font-family: map-get($fonts, $group);\n  font-weight: map-deep-get($font-weights, $group, $weight-variant);\n  font-style: $style-variant;\n}\n\n// Grid mixins\n@mixin col($column-count) {\n  @if $column-count == 2 {\n    width: 16.6666666666%;\n  }\n  @if $column-count == 4 {\n    width: 33.33%;\n  }\n}\n\n"]}